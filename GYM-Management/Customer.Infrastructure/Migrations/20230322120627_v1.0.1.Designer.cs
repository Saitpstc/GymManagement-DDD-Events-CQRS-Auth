// <auto-generated />
using System;
using Customer.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Customer.Infrastructure.Migrations
{
    [DbContext(typeof(CustomerDbContext))]
    [Migration("20230322120627_v1.0.1")]
    partial class v101
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Customer.Infrastructure.Database.Tables.CustomerDB", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MembershipDbId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MembershipDbId")
                        .IsUnique()
                        .HasFilter("[MembershipDbId] IS NOT NULL");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Customer.Infrastructure.Database.Tables.MembershipDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AvailableFreezePeriod")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SubscriptionType")
                        .HasColumnType("int");

                    b.Property<int>("TotalMonthsOfMembership")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Membership");
                });

            modelBuilder.Entity("Customer.Infrastructure.Database.Tables.CustomerDB", b =>
                {
                    b.HasOne("Customer.Infrastructure.Database.Tables.MembershipDb", "MembershipDb")
                        .WithOne("Customer")
                        .HasForeignKey("Customer.Infrastructure.Database.Tables.CustomerDB", "MembershipDbId");

                    b.OwnsOne("Customer.Infrastructure.Database.Tables.EmailDb", "EmailDb", b1 =>
                        {
                            b1.Property<Guid>("CustomerDBId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CustomerDBId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerDBId");
                        });

                    b.OwnsOne("Customer.Infrastructure.Database.Tables.NameDb", "NameDb", b1 =>
                        {
                            b1.Property<Guid>("CustomerDBId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CustomerDBId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerDBId");
                        });

                    b.OwnsOne("Customer.Infrastructure.Database.Tables.PhoneNumberDb", "NumberDb", b1 =>
                        {
                            b1.Property<Guid>("CustomerDBId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CustomerDBId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerDBId");
                        });

                    b.Navigation("EmailDb")
                        .IsRequired();

                    b.Navigation("MembershipDb");

                    b.Navigation("NameDb")
                        .IsRequired();

                    b.Navigation("NumberDb")
                        .IsRequired();
                });

            modelBuilder.Entity("Customer.Infrastructure.Database.Tables.MembershipDb", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
